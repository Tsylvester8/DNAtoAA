"P",
"P",
"P",
"T",
"T",
"T",
"T",
"A",
"A",
"A",
"A",
"Y",
"STOP",
"STOP",
"H",
"H",
"Q",
"Q",
"N",
"N",
"K",
"K",
"D",
"D",
"E",
"E",
"C",
"C",
"STOP",
"W",
"R",
"R",
"R",
"R",
"S",
"R",
"R",
"G",
"G",
"G",
"G")
("F",
"F",
"L",
"L",
"L",
"L",
"L",
"L",
"I",
"I",
"I",
"M",
"V",
"V",
"V",
"V",
"S",
"S",
"S",
"S",
"P",
"P",
"P",
"P",
"T",
"T",
"T",
"T",
"A",
"A",
"A",
"A",
"Y",
"STOP",
"STOP",
"H",
"H",
"Q",
"Q",
"N",
"N",
"K",
"K",
"D",
"D",
"E",
"E",
"C",
"C",
"STOP",
"W",
"R",
"R",
"R",
"R",
"S",
"R",
"R",
"G",
"G",
"G",
"G")
"F","F",
"L",
"L",
"L",
"L",
"L",
"L",
"I",
"I",
"I",
"M",
"V",
"V",
"V",
"V",
"S",
"S",
"S",
"S",
"P",
"P",
"P",
"P",
"T",
"T",
"T",
"T",
"A",
"A",
"A",
"A",
"Y",
"STOP",
"STOP",
"H",
"H",
"Q",
"Q",
"N",
"N",
"K",
"K",
"D",
"D",
"E",
"E",
"C",
"C",
"STOP",
"W",
"R",
"R",
"R",
"R",
"S",
"R",
"R",
"G",
"G",
"G",
"G")
codones[,2] <- c("F",
"F",
"L",
"L",
"L",
"L",
"L",
"L",
"I",
"I",
"I",
"M",
"V",
"V",
"V",
"V",
"S",
"S",
"S",
"S",
"P",
"P",
"P",
"P",
"T",
"T",
"T",
"T",
"A",
"A",
"A",
"A",
"Y",
"STOP",
"STOP",
"H",
"H",
"Q",
"Q",
"N",
"N",
"K",
"K",
"D",
"D",
"E",
"E",
"C",
"C",
"STOP",
"W",
"R",
"R",
"R",
"R",
"S",
"R",
"R",
"G",
"G",
"G",
"G")
codones[,2] <- c("F",
"F",
"L",
"L",
"L",
"L",
"L",
"L",
"I",
"I",
"I",
"M",
"V",
"V",
"V",
"V",
"S",
"S",
"S",
"S",
"P",
"P",
"P",
"P",
"T",
"T",
"T",
"T",
"A",
"A",
"A",
"A",
"Y",
"STOP",
"STOP",
"H",
"H",
"Q",
"Q",
"N",
"N",
"K",
"K",
"D",
"D",
"E",
"E",
"C",
"C",
"STOP",
"W",
"W",
"R",
"R",
"R",
"R",
"S",
"S",
"R",
"R",
"G",
"G",
"G",
"G")
AAG %in% codones
"AAG" %in% codones
"AAG" %in% codones[,1]
which("AAG" %in% codones[,1])
which("AAG" == codones[,1])
start <- 1 # start possition
stop <- 3 # stop possition
input[start,stop]
x <-  "ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag"
x[1,4]
strsplit(x)
strsplit(x, split = "")
y <-  strsplit(x, split = "")
y[1:4]
y[[1]][1:4]
paste(y)
paste(y[[1]][1:3])
input <- toupper(x) # get the upper case of the input string
input <- gsub("U", "T")
input <- strsplit(input, split = "")
input <- input[[1]]
unlist(input[start:stop])
unlist(input[start:stop]) == codones[,1]
which(cat(input[start:stop]) == codones[,1])
cat(input)
paste(input, sep = "")
input <- toupper(x) # get the upper case of the input string
input <- gsub("U", "T")
substr(1, 3, input)
?split
?strsplit
?substr
substr(input, 1, 3)
hit <- which(substr(input, 1, 3) == codones[,1])
substr(input, 1, 3)
codones[,1]
substr(input, 1, 3) == codones[,1]
input <- toupper(x) # get the upper case of the input string
input <- gsub("U", "T")
input <- gsub("T", "U")
input <- toupper(x) # get the upper case of the input string
input <- toupper(x) # get the upper case of the input string
input <- gsub("T", "U")
toupper(x)
input <- toupper(x) # get the upper case of the input string
input <- gsub("T", "U")
input <- gsub("T", "U", input)
which(substr(input, 1, 3) == codones[,1])
codones[,1] <- c("UUU",
"UUC",
"UUA",
"UUG",
"UCU",
"UCC",
"UCA",
"UCG",
"UAU",
"UAC",
"UAA",
"UAG",
"UGU",
"UGC",
"UGA",
"UGG",
"CUU",
"CUC",
"CUA",
"CUG",
"CCU",
"CCC",
"CCA",
"CCG",
"CAU",
"CAC",
"CAA",
"CAG",
"CGU",
"CGC",
"CGA",
"CGG",
"AUU",
"AUC",
"AUA",
"AUG",
"ACU",
"ACC",
"ACA",
"ACG",
"AAU",
"AAC",
"AAA",
"AAG",
"AGU",
"AGC",
"AGA",
"AGG",
"GUU",
"GUC",
"GUA",
"GUG",
"GCU",
"GCC",
"GCA",
"GCG",
"GAU",
"GAC",
"GAA",
"GAG",
"GGU",
"GGC",
"GGA",
"GGG")
codones[,2] <- c("F",
"F",
"L",
"L",
"S",
"S",
"S",
"S",
"Y",
"Y",
"*",
"*",
"C",
"C",
"*",
"W",
"L",
"L",
"L",
"L",
"P",
"P",
"P",
"P",
"H",
"H",
"Q",
"Q",
"R",
"R",
"R",
"R",
"I",
"I",
"I",
"M",
"T",
"T",
"T",
"T",
"N",
"N",
"K",
"K",
"S",
"S",
"R",
"R",
"V",
"V",
"V",
"V",
"A",
"A",
"A",
"A",
"D",
"D",
"E",
"E",
"G",
"G",
"G",
"G")
?toupper
?matrix
?which
library(devtools)
build()
check()
check()
document()
document()
document()
document()
document()
require("devtools")
install_github("esteinig/netview")
require("devtools")
install_github("esteinig/netview", lib = "C:/RLib/")
require("devtools")
install_github("esteinig/netview", lib = "C:\\RLib\\")
require("devtools")
install_github("esteinig/netview", lib = "C://RLib//")
require("devtools")
install_github("esteinig/netview", lib = "C://Users//Terrence Sylvester//Documents//R//win-library//3.6//")
require("devtools")
install_github("esteinig/netview", lib = "C:\\Users\\Terrence Sylvester//Documents//R//win-library//3.6//")
require("devtools")
install_github("esteinig/netview", lib = "C:\\Users\\Terrence Sylvester\\Documents\\R\\win-library\\3.6\\")
setwd("~/")
dat <-  read.csv("genome_size_.csv", as.is = T)
plot(x = dat$Chrom.num, y = dat$C.value)
genome_per_chromosome <- dat$C.value / dat$Chrom.num
dat$C.value / dat$Chrom.num
dat$C.value
genome_per_chromosome <-  as.numeric(dat$C.value) / dat$Chrom.num
genome_per_chromosome <-  as.numeric(dat$C.value) / as.numeric(dat$Chrom.num)
which(is.na(genome_per_chromosome))
dat[1140,]
dat[1234,]
dat[1671,]
dat <- dat[-c(1140,1234,1671),]
genome_per_chromosome <-  as.numeric(dat$C.value) / as.numeric(dat$Chrom.num)
plot(x = dat$Chrom.num, y = dat$C.value)
lines(genome_per_chromosome)
max(dat$C.value)
max(genome_per_chromosome)
plot(genome_per_chromosome)
plot(genome_per_chromosome, type = "l")
